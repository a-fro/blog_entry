<?php

/**
 * Implements hook_schema().
 */
function blog_entry_schema() {
  $schema['blog_entry'] = array(
    'description' => 'The base table for the blog entry module.',
    'fields' => array(
      'entry_id' => array(
        'description' => 'The primary identifier for a blog entry.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'title' => array(
        'description' => 'The title of the blog entry.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'default' => '',
      ),
      'author_uid' => array(
        'description' => 'The uid of the user who created this blog entry.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the entry was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'updated' => array(
        'description' => 'The Unix timestamp when the entry was last saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'status' => array(
        'description' => 'The publishing status of an entry.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 1,
        'size' => 'tiny',
      ),
    ),
    'indexes' => array(
      'blog_entry_updated' => array('updated'),
      'blog_entry_created' => array('created'),
      'blog_entry_author' => array('author_uid'),
    ),
    'unique keys' => array(
      'entry_id' => array('entry_id'),
    ),
    'foreign keys' => array(
      'blog_entry_author' => array(
        'table' => 'users',
        'columns' => array('author_uid' => 'uid'),
      ),
    ),
    'primary key' => array('entry_id'),
  );

  return $schema;
}


/**
 * Implements hook_install()
 */
function blog_entry_install() {
  $t = get_t();
  $blog_entry_body = array(
    'field_name' => 'blog_entry_body',
    'type' => 'text_with_summary',
    'module' => 'text',
    'cardinality' => 1,
    'locked' => TRUE,
  );
  field_create_field($blog_entry_body);

  $trim_length = variable_get('blog_teaser_length', 600);

  $blog_entry_body_instance = array(
    'field_name' => 'blog_entry_body',
    'entity_type' => 'blog_entry',
    'bundle' => 'blog_entry',
    'label' => $t('Body'),
    'widget' => array(
      'type' => 'text_textarea_with_summary',
      'settings' => array(
        'rows' => 20,
        'summary_rows' => 5,
      ),
      'module' => 'text',
    ),
    'settings' => array(
      'text_processing' => 1,
      'display_summary' => TRUE,
    ),
    'display' => array(
      'default' => array(
        'label' => 'hidden',
        'type' => 'text_default',
      ),
      'teaser' => array(
        'label' => 'hidden',
        'type' => 'text_summary_or_trimmed',
        'trim_length' => $trim_length,
      ),
    ),
  );
  field_create_instance($blog_entry_body_instance);
}

/**
 * Implements hook_uninstall().
 * Deletes the field and its instances
 */
function blog_entry_uninstall() {
  field_delete_field('blog_entry_body');
  variable_del('blog_teaser_length');
}

/**
 * Adds status column to node table
 */
function blog_entry_update_7001() {
  if (!db_field_exists('blog_entry', 'status')) {
    $spec = array(
      'description' => 'Status',
      'type' => 'int',
      'not null' => TRUE,
      'default' => 0
    );
    db_add_field('blog_entry', 'status', $spec);
  }
}
